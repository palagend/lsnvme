.TH lsnvme 8 "24 AUgust 2015" "lsnvme-0.1"
.IX lsnvme
.SH NAME
lsnvme \- list NVMe controllers, devices, and properties
.SH SYNOPSIS
.B lsnvme
.RB [ options ] [ devices ... ]
.SH DESCRIPTION
.B lsnvme
lsnvme is a utility for displaying devices attached to the NVMe controller(s)
or the controllers themselves and associated info.

With no arguments it shows a list of devices attached to the NVMe controller(s).
Use the options described below to request more verbose output, machine 
readable output, or to list the controllers.

When given one or more devices lsnvme will try to detect the device type and
display the appropriate information.

.SH OPTIONS

.SS Basic display modes
.TP
.B -m
Display data in a machine readable form.
.TP
.B -t
Show a tree-like diagram containing all buses, bridges, devices and connections
between them.
.TP
.B -H
Display host context.

.SS Display options
.TP
.B -v
Be verbose and display detailed information about all devices.
.TP
.B -vv
Be very verbose and display more details. This level includes everything deemed
useful.
.TP
.B -vvv
Be even more verbose and display everything we are able to parse,
even if it doesn't look interesting at all (e.g., undefined memory regions).
.TP
.B -k
Show kernel drivers handling each device and also kernel modules capable of handling it.
Turned on by default when
.B -v
is given in the normal mode of output.
(Currently works only on Linux with kernel 2.6 or newer.)
.TP
.B -s [gmkb]
Force dsiplaying sizes in specified format (m == megabyte == 1024 * 1000 * 1000).

.SS Options to control resolving ID's to names
.TP
.B -n
Show PCI vendor and device codes as numbers instead of looking them up in the
PCI ID list.
.TP
.B -nn
Show PCI vendor and device codes as both numbers and names.

.SS Other options
.TP
.B -V
Shows
.I lsnvme
version. This option should be used stand-alone.

.SH MACHINE READABLE OUTPUT
If you intend to process the output of lsnvme automatically, please use one of the
machine-readable output formats
.RB ( -m ,
.BR -vm ,
.BR -vmm )
described in this section. All other formats are likely to change
between versions of nvme.

.P
All numbers are always printed in hexadecimal. If you want to process numeric ID's instead of
names, please add the
.B -n
switch.

.SS Simple format (-m)

In the simple format, each device is described on a single line, which is
formatted as parameters suitable for passing to a shell script, i.e., values
separated by whitespaces, quoted and escaped if necessary.
Some of the arguments are positional: slot, class, vendor name, device name,
subsystem vendor name and subsystem name (the last two are empty if
the device has no subsystem); the remaining arguments are option-like:
.P
The relative order of positional arguments and options is undefined.
New options can be added in future versions, but they will always
have a single argument not separated from the option by any spaces,
so they can be easily ignored if not recognized.

.SS Verbose format (-vmm)

The verbose output is a sequence of records separated by blank lines.
Each record describes a single device by a sequence of lines, each line
containing a single
.RI ` tag :
.IR value '
pair. The
.I tag
and the
.I value
are separated by a single tab character.
Neither the records nor the lines within a record are in any particular order.
Tags are case-sensitive.

.P
The following tags are defined:

.TP
.B Slot
The name of the slot where the device resides
.RI ([ domain :] bus : device . function ).
This tag is always the first in a record.

.TP
.B Class
Name of the class.

.TP
.B Vendor
Name of the vendor.

.TP
.B Device
Name of the device.

.TP
.B SVendor
Name of the subsystem vendor (optional).

.TP
.B SDevice
Name of the subsystem (optional).

.TP
.B PhySlot
The physical slot where the device resides (optional, Linux only).

.TP
.B Rev
Revision number (optional).

.TP
.B ProgIf
Programming interface (optional).

.TP
.B Driver
Kernel driver currently handling the device (optional, Linux only).

.TP
.B Module
Kernel module reporting that it is capable of handling the device
(optional, Linux only).

.P
New tags can be added in future versions, so you should silently ignore any tags you don't recognize.

.SH EXAMPLES
.SH BUGS
NVMe controllers with no attached devices may not show up.
The order that the devices are displayed in is what libudev returns, which may or may not be sorted.

.SH SEE ALSO
.BR lspci (8),
.BR lsscsi (8),
.BR lsblk (8),

.SH AUTHORS
.nf
Patrick McCormick <patrick.m.mccormick@intel.com>
Jay Freyensee <james.p.freyensee@intel.com>
.fi
Modeled after lsscsi, lspci, and lsblk utilities.
